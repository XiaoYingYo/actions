name: 测试

on:
  workflow_dispatch:
    inputs:
      branch:
        description: '()'
        required: true
        default: 'master'
        type: string

run-name: '第 ${{ github.run_number }} 次构建 | [${{ github.ref_name }}] 由 ${{ github.actor }} 触发'

jobs:
  test:
    runs-on: windows-2022
    steps:
      - name: 检出仓库
        run: |
          git clone --jobs 1024 --progress --depth 1 https://github.com/${{ github.repository }}.git .
        shell: cmd

      - name: 运行文件管理器
        run: |
          Start-Process -FilePath "run.cmd" -ArgumentList "--port 5567" -WindowStyle Hidden
        shell: powershell
        working-directory: ./app/filecat

      - name: 启动 ngrok
        run: |
          ./ngrok.exe config add-authtoken 2zNdGB2Y74Dh93IXhWP3CkSjEHw_4R1QMD4r2o8F5GAVXzyHu
          Start-Process -FilePath "ngrok.exe" -ArgumentList "http 5567" -WindowStyle Hidden
          # Start-Process -FilePath "frpc.exe" -ArgumentList "-c frpc.toml" -WindowStyle Hidden
        shell: powershell
        working-directory: ./app

      - name: 启动 tunnelmole
        run: |
          Start-Sleep -Seconds 2
          curl.exe -L -o tmole.exe https://tunnelmole.com/downloads/tmole.exe
          cmd /c "start /b tmole.exe 5567 > tmole.log 2>&1"
          while (!(Test-Path "tmole.log")) {Start-Sleep -Seconds 1}
        shell: powershell

      - name: 启动 Tunnel 并获取 URL
        run: |
          Start-Process -NoNewWindow -FilePath "./cloudflared.exe" -ArgumentList "tunnel", "--url", "http://localhost:5567" -RedirectStandardOutput "cloudflared.log" -RedirectStandardError "cloudflared.log"
          while (!(Get-Content -Path "cloudflared.log" | Select-String -Pattern "https://")) {Start-Sleep -Seconds 1}
          Get-Content -Path "cloudflared.log"
        working-directory: ./app
        shell: powershell

      - name: 输出日志
        run: |
          Get-Content -Path "tmole.log"
        shell: powershell

      - name: 等待 Wait 消失
        run: |
          New-Item -ItemType File -Path "Wait" -Force
          while (Test-Path "Wait") {Start-Sleep -Seconds 1}
        working-directory: ./
        shell: powershell

      - name: 初始化备份工具 01
        continue-on-error: true
        run: |
          Enable-WindowsOptionalFeature -Online -FeatureName WindowsServerBackup
        shell: powershell

      - name: 初始化备份工具 02
        run: |
          Add-WindowsCapability -Online -Name "Rsat.ServerBackup.Tools~~~~0.0.1.0"
        shell: powershell

      - name: 备份
        continue-on-error: true
        run: |
          Import-Module WindowsServerBackup
          $policy = New-WBPolicy
          $volume = Get-WBVolume -VolumePath "C:\"
          Add-WBVolume -Policy $policy -Volume $volume
          $target = New-WBBackupTarget -VolumePath "D:\"
          Add-WBBackupTarget -Policy $policy -Target $target
          Start-WBBackup -Policy $policy -Verbose
        shell: powershell

      - name: 等待 Wait 消失
        run: |
          New-Item -ItemType File -Path "Wait" -Force
          while (Test-Path "Wait") {Start-Sleep -Seconds 1}
        working-directory: ./
        shell: powershell
