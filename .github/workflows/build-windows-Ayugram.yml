name: 编译 Ayugram

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: '是否启用调试模式'
        required: false
        default: false
      branch:
        description: '!61hG9#j^lE$!12zh2'
        required: true
        default: 'master'
        type: string

run-name: '第 ${{ github.run_number }} 次构建 | [${{ github.ref_name }}] 由 ${{ github.actor }} 触发'

jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: 检出仓库
        run: |
          git clone --jobs 1024 --progress --depth 1 https://github.com/${{ github.repository }}.git .
        shell: cmd

      - name: 检出仓库
        run: |
          git clone --jobs 1024 --progress --depth 1 https://github.com/XiaoYingYo/AyuGramDesktop.git tdesktop
          cd tdesktop
          git submodule update --init --recursive -j 64
        shell: cmd

      - name: 运行文件管理器
        run: |
          Start-Process -FilePath "run.cmd" -ArgumentList "--port 5567" -WindowStyle Hidden
        shell: powershell
        working-directory: ./app/filecat

      - name: 启动 ngrok
        run: |
          choco install ngrok
          ngrok config add-authtoken 2zNdGB2Y74Dh93IXhWP3CkSjEHw_4R1QMD4r2o8F5GAVXzyHu
          Start-Process -FilePath "ngrok" -ArgumentList "http 5567" -WindowStyle Hidden
        shell: powershell

      - name: 启动 tunnelmole
        run: |
          Start-Sleep -Seconds 2
          curl.exe -L -o tmole.exe https://tunnelmole.com/downloads/tmole.exe
          cmd /c "start /b tmole.exe 5567 > tmole.log 2>&1"
        shell: powershell

      - name: 输出日志
        run: |
          Start-Sleep -Seconds 2
          Get-Content -Path "tmole.log"
        shell: powershell

      - name: 设置 Git 用户信息
        run: |
          git config --global user.name "XiaoYingYo"
          git config --global user.email "759852125@qq.com"
        working-directory: ./tdesktop

      - name: 设置 Python 3.10 环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 将 MSBuild 添加到 PATH
        uses: microsoft/setup-msbuild@v2

      - name: 检查环境变量
        run: |
          if exist "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" (echo "√ Vcvars64 Exists") else (echo "X Vcvars64 Not")
        shell: cmd

      - name: 缓存->依赖
        id: cache-prepare-script
        uses: actions/cache@v4
        with:
          path: |
            tdesktop/cmake
            tdesktop/Telegram/lib_crl
            tdesktop/Telegram/lib_rpl
            tdesktop/Telegram/lib_base
            tdesktop/Telegram/codegen
            tdesktop/Telegram/lib_ui
            tdesktop/Telegram/lib_lottie
            tdesktop/Telegram/lib_tl
            tdesktop/Telegram/lib_spellcheck
            tdesktop/Telegram/lib_storage
            tdesktop/Telegram/ThirdParty
            tdesktop/Telegram/lib_qr
            tdesktop/Telegram/lib_webrtc
            tdesktop/Telegram/lib_webview
            tdesktop/Telegram/Libraries
            Libraries
            ThirdParty
          key: ${{ runner.os }}-prepare-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-prepare-

      - name: 缓存->编译
        id: cache-build-output
        uses: actions/cache@v4
        with:
          path: tdesktop/out
          key: ${{ runner.os }}-build-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: 初始化依赖库
        if: steps.cache-prepare-script.outputs.cache-hit != 'true'
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          Telegram\build\prepare\win.bat
        shell: cmd
        working-directory: ./tdesktop

      - name: 初始化工程
        if: steps.cache-build-output.outputs.cache-hit != 'true'
        working-directory: ./tdesktop/Telegram
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          .\configure.bat x64 -D TDESKTOP_API_ID=2040 -D TDESKTOP_API_HASH=b18441a1ff607e10a989891a5462e627
        shell: cmd

      - name: 编译项目
        working-directory: ./tdesktop/out
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          msbuild Telegram.sln /p:Configuration=Release /p:Platform=x64
        shell: cmd

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: AyuGramDesktop-Windows
          path: tdesktop/out/Release/AyuGram.exe

      - name: 安装 7-Zip
        uses: milliewalky/setup-7-zip@v2
        with:
          tag: ''

      - name: 分卷压缩构建目录
        run: |
          mkdir .\pack
          7z a -t7z -mx=9 -v1024m .\pack\AyuGram-bind.7z .\tdesktop .\Libraries .\ThirdParty
        shell: pwsh

      - name: 上传整个构建完毕目录
        uses: actions/upload-artifact@v4
        with:
          name: AyuGramDesktop-Windows-chunks
          path: .\pack\
          retention-days: 7

      # - name: 上传整个构建完毕目录
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: AyuGramDesktop-Windows
      #     path: |
      #       tdesktop
      #       Libraries
      #       ThirdParty
